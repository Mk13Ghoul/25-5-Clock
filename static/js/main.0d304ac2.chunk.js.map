{"version":3,"sources":["hooks/useInterval.js","actions/index.js","components/Timer.js","components/BreakController.js","components/SessionController.js","components/Controllers.js","components/StartStop.js","components/Restart.js","components/Buttons.js","App.js","reducers/isRunning.js","reducers/breakTime.js","reducers/sessionTime.js","reducers/turn.js","reducers/timer.js","reducers/didReset.js","reducers/index.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","setTime","payload","type","calcTime","seconds","min","Math","floor","sec","addZeros","time","newTime","Timer","turn","useSelector","state","breakTime","sessionTime","isRunning","timer","didReset","dispatch","useDispatch","audio","currentTime","play","pause","className","counterClockwise","value","minValue","maxValue","strokeWidth","styles","buildStyles","strokeLinecap","pathColor","trailColor","preload","src","ref","BreakController","change","onClick","xmlns","width","height","viewBox","d","SessionController","Controllers","StartStop","stop","Restart","Buttons","App","toggle","action","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAyBeA,MApBf,SAAqBC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAIK,EAAKC,aAJX,WACEL,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMO,cAAcF,OAE5B,CAACL,K,OCJOQ,EAAU,SAACC,GAAD,MAAc,CAAEC,KAAM,WAAYD,Y,OCmFnDE,G,MAAW,SAACC,GAChB,IAAIC,EAAMC,KAAKC,MAAMH,EAAU,IAC3BI,EAAMJ,EAAU,GAEdK,EAAW,SAACC,GAChB,IAAIC,EAAUD,EAMd,OALa,IAATA,EACFC,EAAU,KACDL,KAAKC,MAAMG,EAAO,IAAM,IACjCC,EAAU,IAAMD,GAEXC,GAMT,OAHAH,EAAMC,EAASD,GACfH,EAAMI,EAASJ,GAET,GAAN,OAAUA,EAAV,YAAiBG,KAGJI,EAzGD,WACZ,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACpCG,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACzCC,EAAcH,aAAY,SAACC,GAAD,OAAWA,EAAME,eAC3CC,EAAYJ,aAAY,SAACC,GAAD,OAAWA,EAAMG,aACzCC,EAAQL,aAAY,SAACC,GAAD,OAAWA,EAAMI,SACrCC,EAAWN,aAAY,SAACC,GAAD,OAAWA,EAAMK,YACxCC,EAAWC,cACXC,EAAQ7B,mBAkDd,OA/CAJ,GACE,WACM6B,EAAQ,GACVE,EDV4B,CAAEnB,KAAM,mBCcxB,IAAViB,IACW,YAATN,EACFQ,EDxBsB,CAAEnB,KAAM,UCyBZ,UAATW,GACTQ,ED5BwB,CAAEnB,KAAM,eCgCtCgB,EAAY,IAAO,MAIrBvB,qBAAU,WACK,YAATkB,GACFQ,EAASrB,EAAsB,GAAdiB,MAElB,CAACJ,EAAMI,IAGVtB,qBAAU,WACK,UAATkB,GACFQ,EAASrB,EAAoB,GAAZgB,MAElB,CAACH,EAAMG,IAGVrB,qBAAU,WACM,IAAVwB,IACFI,EAAM3B,QAAQ4B,YAAc,EAC5BD,EAAM3B,QAAQ6B,QAIZL,IACFG,EAAM3B,QAAQ8B,QACdH,EAAM3B,QAAQ4B,YAAc,EAC5BH,EDtD2B,CAAEnB,KAAM,mBCwDpC,CAACiB,EAAOC,IAGT,yBAAKO,UAAU,SACb,kBAAC,IAAD,CACEC,kBAAgB,EAChBC,MAAOV,EACPW,SAAU,EACVC,SAAmB,YAATlB,EAAmC,GAAdI,EAA+B,GAAZD,EAClDgB,YAAa,EACbC,OAAQC,YAAY,CAClBC,cAAe,QACfC,UAAW,UACXC,WAAY,aAGd,yBAAKxC,GAAG,eAAegB,GACvB,yBAAKhB,GAAG,aAAaM,EAASgB,IAC9B,2BACEtB,GAAG,OACHyC,QAAQ,OACRC,IAAI,4GACJC,IAAKjB,OCnCAkB,EAvDS,WACtB,IAAMzB,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACzCE,EAAYJ,aAAY,SAACC,GAAD,OAAWA,EAAMG,aACzCG,EAAWC,cAIXoB,EAAS,SAACxC,GACD,cAATA,GAAwBc,EAAY,KAAOE,EAC7CG,EFP+B,CAAEnB,KAAM,oBEQrB,cAATA,GAAwBc,EAAY,IAAME,GACnDG,EFX+B,CAAEnB,KAAM,qBEe3C,OACE,yBAAKyB,UAAU,oBACb,yBAAKA,UAAU,oBAAoB9B,GAAG,eAAtC,gBAGA,yBAAK8B,UAAU,uBACb,4BACEA,UAAU,SACV9B,GAAG,kBACH8C,QAAS,kBAAMD,EAAO,eAEtB,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,0EAGZ,yBAAKnD,GAAG,gBAAgBmB,GACxB,4BACEW,UAAU,SACV9B,GAAG,kBACH8C,QAAS,kBAAMD,EAAO,eAEtB,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,8ECQLC,EAvDW,WACxB,IAAMhC,EAAcH,aAAY,SAACC,GAAD,OAAWA,EAAME,eAC3CC,EAAYJ,aAAY,SAACC,GAAD,OAAWA,EAAMG,aACzCG,EAAWC,cAIXoB,EAAS,SAACxC,GACD,cAATA,GAAwBe,EAAc,KAAOC,EAC/CG,EHXiC,CAAEnB,KAAM,sBGYvB,cAATA,GAAwBe,EAAc,IAAMC,GACrDG,EHfiC,CAAEnB,KAAM,uBGmB7C,OACE,yBAAKyB,UAAU,oBACb,yBAAKA,UAAU,oBAAoB9B,GAAG,iBAAtC,kBAGA,yBAAK8B,UAAU,uBACb,4BACEA,UAAU,SACV9B,GAAG,oBACH8C,QAAS,kBAAMD,EAAO,eAEtB,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,0EAGZ,yBAAKnD,GAAG,kBAAkBoB,GAC1B,4BACEU,UAAU,SACV9B,GAAG,oBACH8C,QAAS,kBAAMD,EAAO,eAEtB,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,8ECtCLE,EATK,WAClB,OACE,yBAAKvB,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCgCSwB,EApCG,WAChB,IAAMjC,EAAYJ,aAAY,SAACC,GAAD,OAAWA,EAAMG,aACzCG,EAAWC,cAEXG,EACJ,yBACEmB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,4BAGNI,EACJ,yBACER,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,2CAIZ,OACE,4BACErB,UAAU,SACV9B,GAAG,aACH8C,QAAS,kBAAMtB,ELzBQ,CAAEnB,KAAM,aK2B9BgB,EAAYkC,EAAO3B,ICfX4B,EAhBC,WACd,IAAMhC,EAAWC,cACjB,OACE,4BAAQK,UAAU,SAAS9B,GAAG,QAAQ8C,QAAS,kBAAMtB,ENO7B,CAAEnB,KAAM,YMN9B,yBACE0C,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,kSCDDM,EATC,WACd,OACE,yBAAK3B,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCSS4B,G,MAXH,WACV,OACE,yBAAK5B,UAAU,aACb,wBAAIA,UAAU,SAAd,kBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,OCDS6B,EAXA,WAA4B,IAA3BzC,EAA0B,wDAAX0C,EAAW,uCACxC,OAAQA,EAAOvD,MACb,IAAK,SACH,OAAQa,EACV,IAAK,QACH,OAAO,EACT,QACE,OAAOA,ICMEC,EAbG,WAAwB,IAAvBD,EAAsB,uDAAd,EAAG0C,EAAW,uCACvC,OAAQA,EAAOvD,MACb,IAAK,kBACH,OAAOa,EAAQ,EACjB,IAAK,kBACH,OAAOA,EAAQ,EACjB,IAAK,QACH,OAAO,EACT,QACE,OAAOA,ICIEE,EAbK,WAAyB,IAAxBF,EAAuB,uDAAf,GAAI0C,EAAW,uCAC1C,OAAQA,EAAOvD,MACb,IAAK,oBACH,OAAOa,EAAQ,EACjB,IAAK,oBACH,OAAOA,EAAQ,EACjB,IAAK,QACH,OAAO,GACT,QACE,OAAOA,ICIEF,EAbF,WAAgC,IAA/BE,EAA8B,uDAAtB,UAAW0C,EAAW,uCAC1C,OAAQA,EAAOvD,MACb,IAAK,UACH,MAAO,UACT,IAAK,QACH,MAAO,QACT,IAAK,QACH,MAAO,UACT,QACE,OAAOa,ICIEI,EAbD,WAA2B,IAA1BJ,EAAyB,uDAAjB,KAAM0C,EAAW,uCACtC,OAAQA,EAAOvD,MACb,IAAK,WACH,OAAOuD,EAAOxD,QAChB,IAAK,iBACH,OAAOc,EAAQ,EACjB,IAAK,QACH,OAAO,KACT,QACE,OAAOA,ICEEK,EAXE,WAA4B,IAA3BL,EAA0B,wDAAX0C,EAAW,uCAC1C,OAAQA,EAAOvD,MACb,IAAK,QACH,OAAO,EACT,IAAK,cACH,OAAO,EACT,QACE,OAAOa,ICCE2C,cAAgB,CAC7B1C,YACAC,cACAC,YACAL,OACAM,QACAC,aCNIuC,EAAQC,YACZC,EACAC,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.0d304ac2.chunk.js","sourcesContent":["// Custom hooks from Dan Abramov\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","export const decrementSession = () => ({ type: \"DECREMENT_SESSION\" });\n\nexport const incrementSession = () => ({ type: \"INCREMENT_SESSION\" });\n\nexport const decrementBreak = () => ({ type: \"DECREMENT_BREAK\" });\n\nexport const incrementBreak = () => ({ type: \"INCREMENT_BREAK\" });\n\nexport const toggle = () => ({ type: \"TOGGLE\" });\n\nexport const sessionTurn = () => ({ type: \"SESSION\" });\n\nexport const breakTurn = () => ({ type: \"BREAK\" });\n\nexport const reset = () => ({ type: \"RESET\" });\n\nexport const resetReset = () => ({ type: \"RESET_RESET\" });\n\nexport const setTime = (payload) => ({ type: \"SET_TIME\", payload });\n\nexport const decrementTime = () => ({ type: \"DECREMENT_TIME\" });\n","import React, { useEffect, useRef } from \"react\";\nimport useInterval from \"../hooks/useInterval\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  sessionTurn,\n  breakTurn,\n  decrementTime,\n  setTime,\n  resetReset,\n} from \"../actions\";\nimport {\n  CircularProgressbarWithChildren,\n  buildStyles,\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst Timer = () => {\n  const turn = useSelector((state) => state.turn);\n  const breakTime = useSelector((state) => state.breakTime);\n  const sessionTime = useSelector((state) => state.sessionTime);\n  const isRunning = useSelector((state) => state.isRunning);\n  const timer = useSelector((state) => state.timer);\n  const didReset = useSelector((state) => state.didReset);\n  const dispatch = useDispatch();\n  const audio = useRef();\n\n  // Custom hook to set interval\n  useInterval(\n    () => {\n      if (timer > 0) {\n        dispatch(decrementTime());\n      }\n\n      // Change turn\n      if (timer === 0) {\n        if (turn === \"SESSION\") {\n          dispatch(breakTurn());\n        } else if (turn === \"BREAK\") {\n          dispatch(sessionTurn());\n        }\n      }\n    },\n    isRunning ? 1000 : null // null makes interval stop\n  );\n\n  // Change timer when session time changes during session or when turn changes\n  useEffect(() => {\n    if (turn === \"SESSION\") {\n      dispatch(setTime(sessionTime * 60));\n    }\n  }, [turn, sessionTime]);\n\n  // Change timer when break time changes during break or when turn changes\n  useEffect(() => {\n    if (turn === \"BREAK\") {\n      dispatch(setTime(breakTime * 60));\n    }\n  }, [turn, breakTime]);\n\n  // Beep\n  useEffect(() => {\n    if (timer === 0) {\n      audio.current.currentTime = 0;\n      audio.current.play();\n    }\n\n    // Stop beeping when reset\n    if (didReset) {\n      audio.current.pause();\n      audio.current.currentTime = 0;\n      dispatch(resetReset());\n    }\n  }, [timer, didReset]);\n\n  return (\n    <div className=\"timer\">\n      <CircularProgressbarWithChildren\n        counterClockwise\n        value={timer}\n        minValue={0}\n        maxValue={turn === \"SESSION\" ? sessionTime * 60 : breakTime * 60}\n        strokeWidth={4}\n        styles={buildStyles({\n          strokeLinecap: \"round\",\n          pathColor: \"#fff6f4\",\n          trailColor: \"#bc827c\",\n        })}\n      >\n        <div id=\"timer-label\">{turn}</div>\n        <div id=\"time-left\">{calcTime(timer)}</div>\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n          ref={audio}\n        ></audio>\n      </CircularProgressbarWithChildren>\n    </div>\n  );\n};\n\nconst calcTime = (seconds) => {\n  let min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n\n  const addZeros = (time) => {\n    let newTime = time;\n    if (time === 0) {\n      newTime = \"00\";\n    } else if (Math.floor(time / 10) < 1) {\n      newTime = \"0\" + time;\n    }\n    return newTime;\n  };\n\n  sec = addZeros(sec);\n  min = addZeros(min);\n\n  return `${min}:${sec}`;\n};\n\nexport default Timer;\n","import React from \"react\";\nimport { decrementBreak, incrementBreak } from \"../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst BreakController = () => {\n  const breakTime = useSelector((state) => state.breakTime);\n  const isRunning = useSelector((state) => state.isRunning);\n  const dispatch = useDispatch();\n\n  // Securing that break won't be less than 1 and bigger than 60\n  // and that you can't change it when timer is running\n  const change = (type) => {\n    if (type === \"INCREMENT\" && breakTime < 60 && !isRunning) {\n      dispatch(incrementBreak());\n    } else if (type === \"DECREMENT\" && breakTime > 1 && !isRunning) {\n      dispatch(decrementBreak());\n    }\n  };\n\n  return (\n    <div className=\"controller__card\">\n      <div className=\"controller__title\" id=\"break-label\">\n        Break Length\n      </div>\n      <div className=\"controller__buttons\">\n        <button\n          className=\"button\"\n          id=\"break-decrement\"\n          onClick={() => change(\"DECREMENT\")}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z\" />\n          </svg>\n        </button>\n        <div id=\"break-length\">{breakTime}</div>\n        <button\n          className=\"button\"\n          id=\"break-increment\"\n          onClick={() => change(\"INCREMENT\")}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M0 16.67l2.829 2.83 9.175-9.339 9.167 9.339 2.829-2.83-11.996-12.17z\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BreakController;\n","import React from \"react\";\nimport { decrementSession, incrementSession } from \"../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst SessionController = () => {\n  const sessionTime = useSelector((state) => state.sessionTime);\n  const isRunning = useSelector((state) => state.isRunning);\n  const dispatch = useDispatch();\n\n  // Securing that session won't be less than 1 and bigger than 60\n  // and that you can't change it when timer is running\n  const change = (type) => {\n    if (type === \"INCREMENT\" && sessionTime < 60 && !isRunning) {\n      dispatch(incrementSession());\n    } else if (type === \"DECREMENT\" && sessionTime > 1 && !isRunning) {\n      dispatch(decrementSession());\n    }\n  };\n\n  return (\n    <div className=\"controller__card\">\n      <div className=\"controller__title\" id=\"session-label\">\n        Session Length\n      </div>\n      <div className=\"controller__buttons\">\n        <button\n          className=\"button\"\n          id=\"session-decrement\"\n          onClick={() => change(\"DECREMENT\")}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z\" />\n          </svg>\n        </button>\n        <div id=\"session-length\">{sessionTime}</div>\n        <button\n          className=\"button\"\n          id=\"session-increment\"\n          onClick={() => change(\"INCREMENT\")}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M0 16.67l2.829 2.83 9.175-9.339 9.167 9.339 2.829-2.83-11.996-12.17z\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionController;\n","import React from \"react\";\nimport BreakController from \"./BreakController\";\nimport SessionController from \"./SessionController\";\n\nconst Controllers = () => {\n  return (\n    <div className=\"controllers\">\n      <BreakController />\n      <SessionController />\n    </div>\n  );\n};\n\nexport default Controllers;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggle } from \"../actions\";\n\nconst StartStop = () => {\n  const isRunning = useSelector((state) => state.isRunning);\n  const dispatch = useDispatch();\n\n  const play = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M3 22v-20l18 10-18 10z\" />\n    </svg>\n  );\n  const stop = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M11 22h-4v-20h4v20zm6-20h-4v20h4v-20z\" />\n    </svg>\n  );\n\n  return (\n    <button\n      className=\"button\"\n      id=\"start_stop\"\n      onClick={() => dispatch(toggle())}\n    >\n      {isRunning ? stop : play}\n    </button>\n  );\n};\n\nexport default StartStop;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"../actions\";\n\nconst Restart = () => {\n  const dispatch = useDispatch();\n  return (\n    <button className=\"button\" id=\"reset\" onClick={() => dispatch(reset())}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path d=\"M13.5 2c-5.629 0-10.212 4.436-10.475 10h-3.025l4.537 5.917 4.463-5.917h-2.975c.26-3.902 3.508-7 7.475-7 4.136 0 7.5 3.364 7.5 7.5s-3.364 7.5-7.5 7.5c-2.381 0-4.502-1.119-5.876-2.854l-1.847 2.449c1.919 2.088 4.664 3.405 7.723 3.405 5.798 0 10.5-4.702 10.5-10.5s-4.702-10.5-10.5-10.5z\" />\n      </svg>\n    </button>\n  );\n};\n\nexport default Restart;\n","import React from \"react\";\nimport StartStop from \"./StartStop\";\nimport Restart from \"./Restart\";\n\nconst Buttons = () => {\n  return (\n    <div className=\"buttons\">\n      <StartStop />\n      <Restart />\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport Timer from \"./components/Timer\";\nimport Controllers from \"./components/Controllers\";\nimport Buttons from \"./components/Buttons\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Pomodoro Clock</h1>\n      <Controllers />\n      <Timer />\n      <Buttons />\n    </div>\n  );\n};\n\nexport default App;\n","const toggle = (state = false, action) => {\n  switch (action.type) {\n    case \"TOGGLE\":\n      return !state;\n    case \"RESET\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default toggle;\n","const breakTime = (state = 5, action) => {\n  switch (action.type) {\n    case \"INCREMENT_BREAK\":\n      return state + 1;\n    case \"DECREMENT_BREAK\":\n      return state - 1;\n    case \"RESET\":\n      return 5;\n    default:\n      return state;\n  }\n};\n\nexport default breakTime;\n","const sessionTime = (state = 25, action) => {\n  switch (action.type) {\n    case \"INCREMENT_SESSION\":\n      return state + 1;\n    case \"DECREMENT_SESSION\":\n      return state - 1;\n    case \"RESET\":\n      return 25;\n    default:\n      return state;\n  }\n};\n\nexport default sessionTime;\n","const turn = (state = \"SESSION\", action) => {\n  switch (action.type) {\n    case \"SESSION\":\n      return \"SESSION\";\n    case \"BREAK\":\n      return \"BREAK\";\n    case \"RESET\":\n      return \"SESSION\";\n    default:\n      return state;\n  }\n};\n\nexport default turn;\n","const timer = (state = 1500, action) => {\n  switch (action.type) {\n    case \"SET_TIME\":\n      return action.payload;\n    case \"DECREMENT_TIME\":\n      return state - 1;\n    case \"RESET\":\n      return 1500;\n    default:\n      return state;\n  }\n};\n\nexport default timer;\n","const didReset = (state = false, action) => {\n  switch (action.type) {\n    case \"RESET\":\n      return true;\n    case \"RESET_RESET\":\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default didReset;\n","import isRunning from \"./isRunning\";\nimport breakTime from \"./breakTime\";\nimport sessionTime from \"./sessionTime\";\nimport turn from \"./turn\";\nimport timer from \"./timer\";\nimport didReset from \"./didReset\";\nimport { combineReducers } from \"redux\";\n\nexport default combineReducers({\n  breakTime,\n  sessionTime,\n  isRunning,\n  turn,\n  timer,\n  didReset,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}